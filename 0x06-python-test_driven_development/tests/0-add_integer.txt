==============================
 Module for ``0-add_integer``
==============================
This is a doctest file to test the above module

====================
 Usage instructions
====================

Import ``add_integer`` from the ``0-add_integer`` module:

  >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

  >>> add_integer(1, 2)
  3

This function works with integers:

  >>> add_integer(24, 42)
  66
  >>> add_integer(-24, 42)
  18
  >>> add_integer(-24, -42)
  -66

This function works with floats: 

  >>> add_integer(2.4, 4.2)
  6
  >>> add_integer(-24, 4.2)
  -20

In the event that arguments are floats, they are cast as integers before addition operation:

  >>> add_integer(2.456, 4.21)
  6
  >>> add_integer(-24.68, 4.242)
  -20

This function requires 2 arguments
No more than 2 arguments:

  >>> add_integer(2, 4, 6)
  Traceback (most recent call last):
  ...
  TypeError: add_integer() takes 2 positional arguments but 3 were given

No less than 2 arguments:

  >>> add_integer(1)
  Traceback (most recent call last):
  ...
  TypeError: add_integer() missing 1 required positional argument: 'b'

=======================
 Tests from classmates
=======================
* Test present: integer casting
* input float and int reversed
  >>> add_integer(8, 5.0)
  13

* input float and int
  >>> add_integer(8.0, 5)
  13

* input bool and int
  >>> add_integer(True, 45)
  46

* input bool and bool
  >>> add_integer(False, True)
  1

* Test present: check type input string and int
  >>> add_integer('hi', 6)
  Traceback (most recent call last):
  ...
  TypeError: a must be an integer

* input int and string reversed
  >>> add_integer(6, 'yo')
  Traceback (most recent call last):
  ...
  TypeError: b must be an integer

* input None
  >>> add_integer(None, None)
  Traceback (most recent call last):
  ...
  TypeError: a must be an integer

* input list and int
  >>> add_integer([1, 2, 3], 7)
  Traceback (most recent call last):
  ...
  TypeError: a must be an integer

* input large number
  >>> add_integer(999999999999, 1)
  1000000000000

* no arguments
  >>> add_integer()
  Traceback (most recent call last):
  ...
  TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

* extra args
  >>> add_integer(6, 2, 4)
  Traceback (most recent call last):
  ...
  TypeError: add_integer() takes 2 positional arguments but 3 were given
